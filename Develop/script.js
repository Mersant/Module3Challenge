// Assignment code here


// Get references to the #generate element
var generateBtn = document.querySelector("#generate");

// Write password to the #password input
function writePassword() {
  var password = generatePassword();
  var passwordText = document.querySelector("#password");

  if ( password === -1 ) {
    passwordText.value = "Failed to generate password!";
  } else {
    passwordText.value = password;
  }

}

function generatePassword() {

  var passwordLength;
  // Check if password length is actually a number and is within bounds
  if ( !(passwordLength = +(prompt("Please input the desired password length (At least 8 and at most 128", "Password length"))) 
         || ( passwordLength < 8 ) || (passwordLength > 128 ) ) {
      alert("Invalid input!!! Try again")
      return -1;
  }
  console.log(passwordLength);

  var useLowerCase = confirm("Use lowercase letters?");
  var useUpperCase = confirm("Use uppercase letters?");
  var useNumericCharacters = confirm("Use numeric characters?");
  var useSpecialCharacters = confirm("Use special characters?");
  if ( !useLowerCase && !useUpperCase && !useNumericCharacters && !useSpecialCharacters ) {
    alert("You said no to everything! I need at least one character set to use. Please try again");
    return -1;
  }

  // Finished getting and sanitizing input; now generate actual password.

  /*
  The following loop will generate the actual password. Every value generated by window.crypto.getRandomValues() will be a number between
  0 and 255 that will correspond to a given ASCII code. For the ASCII character set, 48-57 are numbers, 65-90 are uppercase characters, 97-122 are
  lowercase characters and everything else above 31 are special characters. If the ASCII character generated from the number  falls within the user selected bounds, it will be added to the password. If not, it is thrown out and another is generated.
  */

  var generatedPassword = new Array(passwordLength);
  var passChar = new Int8Array(1);
  var passIndex = 0;

  
  while ( passIndex < generatedPassword.length ) {
    window.crypto.getRandomValues(passChar);

    // Lowercase Characters // 
    if (passChar[0] >= 97 && passChar[0] <= 122 ) {

      if(useLowerCase) { generatedPassword[passIndex] = String.fromCharCode(passChar[0]);}

    } 
    // Uppercase Characters // 
    else if ( passChar[0] >= 65 && passChar[0] <= 90 ) {

      if(useUpperCase) { generatedPassword[passIndex] = String.fromCharCode(passChar[0]);}

    }
    // Numeric Characters // 
    else if ( passChar[0] >= 48 && passChar[0] <= 57 ) {
      
      if(useNumericCharacters) {generatedPassword[passIndex] = String.fromCharCode(passChar[0]);}

    }
    // Special Characters // 
    else if ( passChar[0] >= 32 && passChar <= 126) {

      if(useSpecialCharacters) {generatedPassword[passIndex] = String.fromCharCode(passChar[0]);}

    }
    else { // The generated character must be a control character or other sort of unusable character
      console.log("Failed. Threw out: " + passChar[0])
      continue;
    }

    passIndex++;
  }
  return generatedPassword.join("");
}

// Add event listener to generate button
generateBtn.addEventListener("click", writePassword);
